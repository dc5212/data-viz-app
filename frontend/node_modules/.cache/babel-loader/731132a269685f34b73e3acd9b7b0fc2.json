{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devarshi\\\\data-viz-app\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTasks, fetchTask, createTask } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Define the retryTask function inside the component\n  const retryTask = async taskId => {\n    try {\n      // Get the original task to copy its parameters\n      const originalTask = await fetchTask(taskId);\n\n      // Create a new task with the same parameters\n      return await createTask(originalTask.parameters);\n    } catch (error) {\n      console.error('Error retrying task:', error);\n      throw error;\n    }\n  };\n\n  // Define the refreshTasks function\n  const refreshTasks = async () => {\n    try {\n      const data = await fetchTasks();\n      setTasks(data);\n    } catch (error) {\n      console.error('Error refreshing tasks:', error);\n    }\n  };\n  useEffect(() => {\n    // Load tasks initially\n    refreshTasks();\n\n    // Set up polling to refresh task status\n    const intervalId = setInterval(refreshTasks, 3000);\n    return () => clearInterval(intervalId);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks yet. Create a new task to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-${task.status}`,\n              children: task.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(task.created_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status === 'completed' ? /*#__PURE__*/_jsxDEV(Link, {\n              to: `/tasks/${task.id}`,\n              children: \"View Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this) : task.status === 'failed' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-failed\",\n                title: \"The task encountered an error during processing. Please try again with different parameters.\",\n                children: \"Failed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"retry-btn\",\n                onClick: async () => {\n                  try {\n                    await retryTask(task.id);\n                    // Refresh the task list after retry\n                    refreshTasks();\n                  } catch (err) {\n                    console.error('Retry failed:', err);\n                  }\n                },\n                children: \"Retry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Processing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"suOgpW3t2nMZzUgwyaGqSRlDRtE=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","Link","fetchTasks","fetchTask","createTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","retryTask","taskId","originalTask","parameters","error","console","refreshTasks","data","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","task","id","status","Date","created_at","toLocaleString","to","title","onClick","err","_c","$RefreshReg$"],"sources":["C:/Users/Devarshi/data-viz-app/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchTasks, fetchTask, createTask } from '../services/api';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Define the retryTask function inside the component\r\n  const retryTask = async (taskId) => {\r\n    try {\r\n      // Get the original task to copy its parameters\r\n      const originalTask = await fetchTask(taskId);\r\n      \r\n      // Create a new task with the same parameters\r\n      return await createTask(originalTask.parameters);\r\n    } catch (error) {\r\n      console.error('Error retrying task:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Define the refreshTasks function\r\n  const refreshTasks = async () => {\r\n    try {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error('Error refreshing tasks:', error);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    // Load tasks initially\r\n    refreshTasks();\r\n    \r\n    // Set up polling to refresh task status\r\n    const intervalId = setInterval(refreshTasks, 3000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n  \r\n  if (loading) {\r\n    return <div>Loading tasks...</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"task-list\">\r\n      <h2>Tasks</h2>\r\n      {tasks.length === 0 ? (\r\n        <p>No tasks yet. Create a new task to get started.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Status</th>\r\n              <th>Created</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tasks.map(task => (\r\n              <tr key={task.id}>\r\n                <td>{task.id}</td>\r\n                <td>\r\n                  <span className={`status-${task.status}`}>\r\n                    {task.status}\r\n                  </span>\r\n                </td>\r\n                <td>{new Date(task.created_at).toLocaleString()}</td>\r\n                <td>\r\n                  {task.status === 'completed' ? (\r\n                    <Link to={`/tasks/${task.id}`}>View Results</Link>\r\n                  ) : task.status === 'failed' ? (\r\n                    <div>\r\n                      <span className=\"status-failed\" title=\"The task encountered an error during processing. Please try again with different parameters.\">\r\n                        Failed\r\n                      </span>\r\n                      <button \r\n                        className=\"retry-btn\"\r\n                        onClick={async () => {\r\n                          try {\r\n                            await retryTask(task.id);\r\n                            // Refresh the task list after retry\r\n                            refreshTasks();\r\n                          } catch (err) {\r\n                            console.error('Retry failed:', err);\r\n                          }\r\n                        }}\r\n                      >\r\n                        Retry\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <span>Processing...</span>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}