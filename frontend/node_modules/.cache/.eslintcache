[{"C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\index.js":"1","C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\App.js":"2","C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\pages\\Home.js":"3","C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\pages\\TaskDetails.js":"4","C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\components\\BarChart.js":"5","C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\components\\TaskForm.js":"6","C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\components\\LineChart.js":"7","C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\components\\TaskList.js":"8","C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\services\\api.js":"9"},{"size":228,"mtime":1743346828273,"results":"10","hashOfConfig":"11"},{"size":796,"mtime":1743346828259,"results":"12","hashOfConfig":"11"},{"size":920,"mtime":1743346828275,"results":"13","hashOfConfig":"11"},{"size":6835,"mtime":1743347917450,"results":"14","hashOfConfig":"11"},{"size":3462,"mtime":1743346828262,"results":"15","hashOfConfig":"11"},{"size":3011,"mtime":1743346828268,"results":"16","hashOfConfig":"11"},{"size":5286,"mtime":1743346828266,"results":"17","hashOfConfig":"11"},{"size":1957,"mtime":1743346828270,"results":"18","hashOfConfig":"11"},{"size":1592,"mtime":1743347834225,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qnzj7f",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\index.js",[],["40","41"],"C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\App.js",[],"C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\pages\\TaskDetails.js",["42","43"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchTask, fetchTaskAnalytics } from '../services/api';\r\nimport BarChart from '../components/BarChart';\r\nimport LineChart from '../components/LineChart';\r\nimport { exportTaskData } from '../services/api';\r\n\r\nconst TaskDetails = () => {\r\n  const { taskId } = useParams();\r\n  const [task, setTask] = useState(null);\r\n  const [analytics, setAnalytics] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [hasData, setHasData] = useState(true);\r\n  const [filters, setFilters] = useState({\r\n    company: '',\r\n    year: ''\r\n  });\r\n  \r\n  useEffect(() => {\r\n    const loadTaskData = async () => {\r\n      try {\r\n        const taskData = await fetchTask(taskId);\r\n        setTask(taskData);\r\n        \r\n        if (taskData.status === 'completed') {\r\n          const analyticsData = await fetchTaskAnalytics(taskId);\r\n          setAnalytics(analyticsData);\r\n        }\r\n      } catch (err) {\r\n        setError('Error loading task data. Please try again.');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadTaskData();\r\n    \r\n    // Poll for updates if task is not completed\r\n    let intervalId;\r\n    if (task && task.status !== 'completed') {\r\n      intervalId = setInterval(loadTaskData, 2000);\r\n    }\r\n    \r\n    return () => {\r\n      if (intervalId) clearInterval(intervalId);\r\n    };\r\n  }, [taskId, task?.status]);\r\n  \r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilters({\r\n      ...filters,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleExportCSV = () => {\r\n    exportTaskData(taskId, 'csv', filters);\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n      exportTaskData(taskId, 'excel', filters);\r\n  };\r\n  \r\n  \r\n  // Add this right after you apply filters\r\n  const applyFilters = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Fetch analytics with the current filters\r\n      const analyticsData = await fetchTaskAnalytics(taskId, filters);\r\n      setAnalytics(analyticsData);\r\n      \r\n      // Check if the filtered data is empty\r\n      const hasTimelineData = analyticsData.timeline_chart && analyticsData.timeline_chart.length > 0;\r\n      const hasBarData = analyticsData.bar_chart && analyticsData.bar_chart.length > 0;\r\n      \r\n      // Set a state variable to track if we have data\r\n      setHasData(hasTimelineData || hasBarData);\r\n    } catch (err) {\r\n      console.error('Error applying filters:', err);\r\n      setError('Error applying filters. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  if (loading && !task) {\r\n    return <div>Loading task data...</div>;\r\n  }\r\n  \r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n  \r\n  if (!task) {\r\n    return <div>Task not found</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"task-details\">\r\n      <h1>Task {taskId} Details</h1>\r\n      \r\n      <div className=\"task-info\">\r\n        <h2>Task Information</h2>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Status:</td>\r\n              <td>{task.status}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Created:</td>\r\n              <td>{new Date(task.created_at).toLocaleString()}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Parameters:</td>\r\n              <td>\r\n                <ul>\r\n                  <li>Start Year: {task.parameters.start_year}</li>\r\n                  <li>End Year: {task.parameters.end_year}</li>\r\n                  <li>\r\n                    Companies: {task.parameters.companies && task.parameters.companies.length > 0\r\n                      ? task.parameters.companies.join(', ')\r\n                      : 'All'\r\n                    }\r\n                  </li>\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      {task.status !== 'completed' ? (\r\n        <div className=\"processing-message\">\r\n          <p>Task is currently {task.status}. Please wait for it to complete.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"visualization-section\">\r\n          <h2>Data Visualization</h2>\r\n          \r\n          <div className=\"filters\">\r\n            <h3>Filter Data</h3>\r\n            <div className=\"filter-form\">\r\n              <div className=\"form-group\">\r\n                <label>Company:</label>\r\n                <select\r\n                  name=\"company\"\r\n                  value={filters.company}\r\n                  onChange={handleFilterChange}\r\n                >\r\n                  <option value=\"\">All Companies</option>\r\n                  <option value=\"Toyota\">Toyota</option>\r\n                  <option value=\"Honda\">Honda</option>\r\n                  <option value=\"Ford\">Ford</option>\r\n                  <option value=\"Chevrolet\">Chevrolet</option>\r\n                  <option value=\"Nissan\">Nissan</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label>Year:</label>\r\n                <select\r\n                  name=\"year\"\r\n                  value={filters.year}\r\n                  onChange={handleFilterChange}\r\n                >\r\n                  <option value=\"\">All Years</option>\r\n                  <option value=\"2023\">2023</option>\r\n                  <option value=\"2024\">2024</option>\r\n                  <option value=\"2025\">2025</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <button onClick={applyFilters}>Apply Filters</button>\r\n            </div>\r\n          </div>\r\n\r\n          {task.status === 'completed' && (\r\n              <div className=\"export-buttons\">\r\n                  <h3>Export Data</h3>\r\n                  <div className=\"button-group\">\r\n                      <button onClick={handleExportCSV} className=\"export-btn\">\r\n                          Export as CSV\r\n                      </button>\r\n                      <button onClick={handleExportExcel} className=\"export-btn\">\r\n                          Export as Excel\r\n                      </button>\r\n                  </div>\r\n              </div>\r\n          )}\r\n\r\n          \r\n          {analytics && (\r\n            <div className=\"charts\">\r\n              <div className=\"chart-container\">\r\n                <h3>Sales by Month</h3>\r\n                <LineChart data={analytics.timeline_chart} />\r\n              </div>\r\n              \r\n              <div className=\"chart-container\">\r\n                <h3>Sales by Company</h3>\r\n                <BarChart data={analytics.bar_chart} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetails;","C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\components\\BarChart.js",[],"C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\components\\TaskForm.js",[],"C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\components\\LineChart.js",[],"C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\components\\TaskList.js",[],"C:\\Users\\Devarshi\\data-viz-app\\frontend\\src\\services\\api.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":14,"column":10,"nodeType":"50","messageId":"51","endLine":14,"endColumn":17},{"ruleId":"52","severity":1,"message":"53","line":49,"column":6,"nodeType":"54","endLine":49,"endColumn":28,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'hasData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'task'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [taskId, task.status, task]",{"range":"61","text":"62"},[1518,1540],"[taskId, task.status, task]"]