{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devarshi\\\\data-viz-app\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTasks, retryTask } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [retrying, setRetrying] = useState(null);\n  const loadTasks = async () => {\n    try {\n      const data = await fetchTasks();\n      setTasks(data);\n    } catch (error) {\n      console.error('Error loading tasks:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadTasks();\n\n    // Set up polling to refresh task status\n    const intervalId = setInterval(loadTasks, 3000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleRetry = async taskId => {\n    setRetrying(taskId);\n    try {\n      await retryTask(taskId);\n      await loadTasks(); // Refresh tasks after retry\n    } catch (error) {\n      console.error('Error retrying task:', error);\n    } finally {\n      setRetrying(null);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks yet. Create a new task to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: task.status === 'failed' ? 'failed-task' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-${task.status}`,\n              children: task.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(task.created_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status === 'completed' ? /*#__PURE__*/_jsxDEV(Link, {\n              to: `/tasks/${task.id}`,\n              children: \"View Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this) : task.status === 'failed' ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"retry-button\",\n              onClick: () => handleRetry(task.id),\n              disabled: retrying === task.id,\n              children: retrying === task.id ? 'Retrying...' : 'Retry Task'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Processing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"TYzyYcQUSD3g1bNk+PBE0hg194Q=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","Link","fetchTasks","retryTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","retrying","setRetrying","loadTasks","data","error","console","intervalId","setInterval","clearInterval","handleRetry","taskId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","task","status","id","Date","created_at","toLocaleString","to","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Devarshi/data-viz-app/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchTasks, retryTask } from '../services/api';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [retrying, setRetrying] = useState(null);\r\n  \r\n  const loadTasks = async () => {\r\n    try {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error('Error loading tasks:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadTasks();\r\n    \r\n    // Set up polling to refresh task status\r\n    const intervalId = setInterval(loadTasks, 3000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n  \r\n  const handleRetry = async (taskId) => {\r\n    setRetrying(taskId);\r\n    try {\r\n      await retryTask(taskId);\r\n      await loadTasks(); // Refresh tasks after retry\r\n    } catch (error) {\r\n      console.error('Error retrying task:', error);\r\n    } finally {\r\n      setRetrying(null);\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return <div>Loading tasks...</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"task-list\">\r\n      <h2>Tasks</h2>\r\n      {tasks.length === 0 ? (\r\n        <p>No tasks yet. Create a new task to get started.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Status</th>\r\n              <th>Created</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tasks.map(task => (\r\n              <tr key={task.id} className={task.status === 'failed' ? 'failed-task' : ''}>\r\n                <td>{task.id}</td>\r\n                <td>\r\n                  <span className={`status-${task.status}`}>\r\n                    {task.status}\r\n                  </span>\r\n                </td>\r\n                <td>{new Date(task.created_at).toLocaleString()}</td>\r\n                <td>\r\n                  {task.status === 'completed' ? (\r\n                    <Link to={`/tasks/${task.id}`}>View Results</Link>\r\n                  ) : task.status === 'failed' ? (\r\n                    <button \r\n                      className=\"retry-button\" \r\n                      onClick={() => handleRetry(task.id)}\r\n                      disabled={retrying === task.id}\r\n                    >\r\n                      {retrying === task.id ? 'Retrying...' : 'Retry Task'}\r\n                    </button>\r\n                  ) : (\r\n                    <span>Processing...</span>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}