{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devarshi\\\\data-viz-app\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createTask } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onTaskCreated\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    start_year: 2023,\n    end_year: 2025,\n    companies: []\n  });\n  const [loading, setLoading] = useState(false);\n  const carCompanies = ['Toyota', 'Honda', 'Ford', 'Chevrolet', 'Nissan'];\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleCompanyChange = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    if (checked) {\n      setFormData({\n        ...formData,\n        companies: [...formData.companies, value]\n      });\n    } else {\n      setFormData({\n        ...formData,\n        companies: formData.companies.filter(company => company !== value)\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const newTask = await createTask(formData);\n      if (onTaskCreated) onTaskCreated(newTask);\n      setFormData({\n        start_year: 2023,\n        end_year: 2025,\n        companies: []\n      });\n    } catch (error) {\n      console.error('Error creating task:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Data Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Start Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"start_year\",\n          value: formData.start_year,\n          onChange: handleChange,\n          min: \"2020\",\n          max: \"2025\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"End Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"end_year\",\n          value: formData.end_year,\n          onChange: handleChange,\n          min: \"2020\",\n          max: \"2025\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter by Companies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-group\",\n          children: carCompanies.map(company => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `company-${company}`,\n              name: \"companies\",\n              value: company,\n              checked: formData.companies.includes(company),\n              onChange: handleCompanyChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `company-${company}`,\n              children: company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, company, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Creating task...' : 'Create Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"EeR/jYJulIEy8TYZs8CZ0tozsCU=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","createTask","jsxDEV","_jsxDEV","TaskForm","onTaskCreated","_s","formData","setFormData","start_year","end_year","companies","loading","setLoading","carCompanies","handleChange","e","name","value","target","handleCompanyChange","checked","filter","company","handleSubmit","preventDefault","newTask","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","min","max","required","map","id","includes","htmlFor","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Devarshi/data-viz-app/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createTask } from '../services/api';\r\n\r\nconst TaskForm = ({ onTaskCreated }) => {\r\n  const [formData, setFormData] = useState({\r\n    start_year: 2023,\r\n    end_year: 2025,\r\n    companies: []\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const carCompanies = ['Toyota', 'Honda', 'Ford', 'Chevrolet', 'Nissan'];\r\n  \r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  const handleCompanyChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    if (checked) {\r\n      setFormData({\r\n        ...formData,\r\n        companies: [...formData.companies, value]\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        companies: formData.companies.filter(company => company !== value)\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const newTask = await createTask(formData);\r\n      if (onTaskCreated) onTaskCreated(newTask);\r\n      setFormData({\r\n        start_year: 2023,\r\n        end_year: 2025,\r\n        companies: []\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"task-form\">\r\n      <h2>Create New Data Task</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Start Year:</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"start_year\"\r\n            value={formData.start_year}\r\n            onChange={handleChange}\r\n            min=\"2020\"\r\n            max=\"2025\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label>End Year:</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"end_year\"\r\n            value={formData.end_year}\r\n            onChange={handleChange}\r\n            min=\"2020\"\r\n            max=\"2025\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label>Filter by Companies:</label>\r\n          <div className=\"checkbox-group\">\r\n            {carCompanies.map(company => (\r\n              <div key={company}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={`company-${company}`}\r\n                  name=\"companies\"\r\n                  value={company}\r\n                  checked={formData.companies.includes(company)}\r\n                  onChange={handleCompanyChange}\r\n                />\r\n                <label htmlFor={`company-${company}`}>{company}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Creating task...' : 'Create Task'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,YAAY,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC;EAEvE,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCX,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACU,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,mBAAmB,GAAIJ,CAAC,IAAK;IACjC,MAAM;MAAEE,KAAK;MAAEG;IAAQ,CAAC,GAAGL,CAAC,CAACG,MAAM;IACnC,IAAIE,OAAO,EAAE;MACXb,WAAW,CAAC;QACV,GAAGD,QAAQ;QACXI,SAAS,EAAE,CAAC,GAAGJ,QAAQ,CAACI,SAAS,EAAEO,KAAK;MAC1C,CAAC,CAAC;IACJ,CAAC,MAAM;MACLV,WAAW,CAAC;QACV,GAAGD,QAAQ;QACXI,SAAS,EAAEJ,QAAQ,CAACI,SAAS,CAACW,MAAM,CAACC,OAAO,IAAIA,OAAO,KAAKL,KAAK;MACnE,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMM,YAAY,GAAG,MAAOR,CAAC,IAAK;IAChCA,CAAC,CAACS,cAAc,CAAC,CAAC;IAClBZ,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMa,OAAO,GAAG,MAAMzB,UAAU,CAACM,QAAQ,CAAC;MAC1C,IAAIF,aAAa,EAAEA,aAAa,CAACqB,OAAO,CAAC;MACzClB,WAAW,CAAC;QACVC,UAAU,EAAE,IAAI;QAChBC,QAAQ,EAAE,IAAI;QACdC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEV,OAAA;IAAK0B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB3B,OAAA;MAAA2B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B/B,OAAA;MAAMgC,QAAQ,EAAEX,YAAa;MAAAM,QAAA,gBAC3B3B,OAAA;QAAK0B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3B,OAAA;UAAA2B,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1B/B,OAAA;UACEiC,IAAI,EAAC,QAAQ;UACbnB,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAEX,QAAQ,CAACE,UAAW;UAC3B4B,QAAQ,EAAEtB,YAAa;UACvBuB,GAAG,EAAC,MAAM;UACVC,GAAG,EAAC,MAAM;UACVC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN/B,OAAA;QAAK0B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3B,OAAA;UAAA2B,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxB/B,OAAA;UACEiC,IAAI,EAAC,QAAQ;UACbnB,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEX,QAAQ,CAACG,QAAS;UACzB2B,QAAQ,EAAEtB,YAAa;UACvBuB,GAAG,EAAC,MAAM;UACVC,GAAG,EAAC,MAAM;UACVC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN/B,OAAA;QAAK0B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3B,OAAA;UAAA2B,QAAA,EAAO;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnC/B,OAAA;UAAK0B,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5BhB,YAAY,CAAC2B,GAAG,CAAClB,OAAO,iBACvBpB,OAAA;YAAA2B,QAAA,gBACE3B,OAAA;cACEiC,IAAI,EAAC,UAAU;cACfM,EAAE,EAAE,WAAWnB,OAAO,EAAG;cACzBN,IAAI,EAAC,WAAW;cAChBC,KAAK,EAAEK,OAAQ;cACfF,OAAO,EAAEd,QAAQ,CAACI,SAAS,CAACgC,QAAQ,CAACpB,OAAO,CAAE;cAC9Cc,QAAQ,EAAEjB;YAAoB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,eACF/B,OAAA;cAAOyC,OAAO,EAAE,WAAWrB,OAAO,EAAG;cAAAO,QAAA,EAAEP;YAAO;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAT/CX,OAAO;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUZ,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN/B,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAACS,QAAQ,EAAEjC,OAAQ;QAAAkB,QAAA,EACrClB,OAAO,GAAG,kBAAkB,GAAG;MAAa;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA3GIF,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AA6Gd,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}